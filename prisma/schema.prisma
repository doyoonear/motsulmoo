// prisma/schema.prisma

// DB 연결 설정 (PostgreSQL 사용)
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Prisma Client 생성 설정
generator client {
  provider = "prisma-client-js"
}

// 사용자 테이블 (향후 확장 대비)
model User {
  id               String            @id @default(uuid())
  email            String?           @unique
  name             String?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt

  purchaseReceipts PurchaseReceipt[]
  fridgeItems      FridgeItem[]

  @@index([email])
}

// 구매내역 이미지 및 메타데이터 테이블
model PurchaseReceipt {
  id            String    @id @default(uuid())
  userId        String?                              // 사용자 ID (선택사항, 향후 확장 대비)
  imageUrl      String                               // 구매내역 이미지 URL (Supabase Storage)
  purchaseDate  DateTime?                            // 구매 날짜 (OCR에서 찾지 못한 경우 null)
  storeName     String?                              // 상점명 (OCR에서 찾지 못한 경우 null)
  ocrRawText    String?   @db.Text                   // OCR 원본 텍스트 (전체)
  createdAt     DateTime  @default(now())            // 업로드 시간
  updatedAt     DateTime  @updatedAt                 // 수정 시간

  fridgeItems   FridgeItem[]                         // 이 영수증에서 파싱된 냉장고 아이템들
  user          User?     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([createdAt])
  @@index([purchaseDate])
}

// 냉장고 아이템 테이블
model FridgeItem {
  id                String             @id @default(uuid())
  userId            String?                                  // 사용자 ID (선택사항)
  purchaseReceiptId String?                                  // 구매내역 ID (직접 추가한 경우 null)
  name              String                                   // 재료명
  category          IngredientCategory                       // 재료 카테고리
  amount            Float                                    // 수량
  unit              IngredientUnit                           // 단위 (g, ml)
  purchasedAt       DateTime?                                // 구매일 (선택사항)
  expiresAt         DateTime?                                // 유통기한 (선택사항)
  createdAt         DateTime           @default(now())       // 생성 시간
  updatedAt         DateTime           @updatedAt            // 수정 시간

  purchaseReceipt   PurchaseReceipt?   @relation(fields: [purchaseReceiptId], references: [id], onDelete: SetNull)
  user              User?              @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([purchaseReceiptId])
  @@index([category])
  @@index([expiresAt])
}

// 재료 카테고리 Enum
enum IngredientCategory {
  VEGETABLE         // 채소류
  MEAT              // 육류
  SEAFOOD           // 해산물
  MUSHROOM          // 버섯류
  EGG_PROTEIN       // 달걀·가공단백류
  GRAIN_NOODLE      // 곡물·면류
  DAIRY             // 유제품
  PROCESSED         // 가공식품
  SEASONING         // 조미료·양념류
  SNACK_ETC         // 기타·간식류
}

// 재료 단위 Enum
enum IngredientUnit {
  G                 // 그램
  ML                // 밀리리터
}
